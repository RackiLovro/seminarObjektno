@model recepTour.Models.RecipeGrocery

@{
    ViewData["Title"] = "Create";
}

<h1>Create a recipe</h1>

<h4>Enter the ingredients</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           <div class="form-group" hidden>
                <label asp-for="RecipeId" class="control-label">Recipe title</label>
                <select asp-for="RecipeId" class="form-control" asp-items="ViewBag.RecipeId" style="pointer-events: none;" readonly></select>
            </div>
            <div class="form-group">
                <label asp-for="GroceryId" class="control-label">Grocery</label>
                <select asp-for="GroceryId" class="form-control" asp-items="ViewBag.GroceryId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add another ingredient" class="btn btn-primary" formaction=@Url.Action("Create") formmethod="post" />
                <input type="submit" value="Add and continue" class="btn btn-primary" formaction=@Url.Action("Continue") formmethod="post" />
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <ul id="steps">
            @if (ViewData["groceries"] != null)
            {
                @foreach (var item in ViewData["groceries"] as List<String>)
                {
            <li> @item</li>
                }
            }
        </ul>
    </div>

</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
