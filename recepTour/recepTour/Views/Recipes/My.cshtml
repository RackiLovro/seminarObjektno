@model IEnumerable<recepTour.Models.Recipe>
@inject UserManager<IdentityUser> userManager

@{ ViewData["Title"] = "My"; }

<h1>My recipes</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Recipes" asp-action="My" method="get">
    <p>
        Search by title: <input type="text" name="title" />
        <input type="submit" value="Search" />
        <input type="hidden" name="userId" value="@userManager.FindByNameAsync(User.Identity.Name).Result.Id" />
        <input type="submit" asp-controller="Recipes" asp-action="My" asp-route-title="" value="Reset" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                Difficulty level
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiffLevel.Description)
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    } |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>