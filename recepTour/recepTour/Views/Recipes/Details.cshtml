@model recepTour.Models.Recipe

@{
    ViewData["Title"] = "Details";
}

<h1>@Html.DisplayFor(model => model.Title)</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Difficulty level
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DiffLevel.Description)
        </dd>
        <dt class="col-sm-2">
            Made by
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserRecipes.First().User.Nickname)
        </dd>
        <dt class="col-sm-2">
            Ingredients
        </dt>
        @foreach (var item in Model.RecipeGroceries.Select((value, i) => new { i, value }))
        {
            @if (item.i != 0)
            {
                <dt class="col-sm-2">
                </dt>
            }
        <dd class="col-sm-10">
            • @Html.DisplayFor(modelItem => item.value.Amount) @Html.DisplayFor(modelItem => item.value.Grocery.Name)
        </dd>
        }
        <dt class="col-sm-2">
            Steps
        </dt>
        @foreach (var item in Model.RecipeSteps.Select((value, i) => new { i, value }))
        {
            @if (item.i != 0)
            {
                <dt class="col-sm-2">
                </dt>
            }
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.value.StepNumber). 
                @Html.DisplayFor(modelItem => item.value.Description)
            </dd>
        }
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated){
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }|
    <a asp-action="Index">Back to List</a>
</div>
